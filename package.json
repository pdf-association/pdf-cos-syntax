{
  "name": "pdf-cos-syntax",
  "displayName": "PDF COS syntax",
  "description": "PDF syntax support by the developers maintaining ISO 32000, the PDF specification.",
  "author": "PDF Association",
  "license": "Apache-2.0",
  "version": "0.1.6",
  "repository": {
    "type": "git",
    "url": "https://github.com/pdf-association/pdf-cos-syntax"
  },
  "publisher": "pdfassociation",
  "categories": [
    "Other",
    "Snippets",
    "Programming Languages",
    "Education",
    "Testing"
  ],
  "keywords": [
    "PDF",
    "FDF",
    "Portable Document Format",
    "Forms Data Format",
    "COS syntax",
    "ISO 32000-1:2008",
    "ISO 32000-2",
    "Adobe PDF"
  ],
  "engines": {
    "vscode": "^1.91.0"
  },
  "icon": "assets/pdf-light.png",
  "main": "./out/client/src/extension",
  "contributes": {
    "grammars": [
      {
        "language": "pdf",
        "scopeName": "source.pdf",
        "path": "./syntaxes/pdf.tmLanguage.json"
      },
      {
        "language": "fdf",
        "scopeName": "source.fdf",
        "path": "./syntaxes/fdf.tmLanguage.json"
      }
    ],
    "semanticTokenTypes": [
      {
        "id": "header",
        "description": "Represents a PDF header '%PDF_x.y'"
      },
      {
        "id": "endobj",
        "description": "Represents the PDF 'endobj' keyword"
      },
      {
        "id": "direct_object_start",
        "description": "Represents start of a PDF object 'X Y obj'"
      },
      {
        "id": "stream",
        "description": "Represents PDF 'stream' keyword"
      },
      {
        "id": "endstream",
        "description": "Represents PDF 'endstream' keyword"
      },
      {
        "id": "dict_start",
        "description": "Represents a PDF dictionary start token '<<'"
      },
      {
        "id": "dict_end",
        "description": "Represents a PDF dictionary end token '>>'"
      },
      {
        "id": "array_start",
        "description": "Represents PDF array start token '["
      },
      {
        "id": "array_end",
        "description": "Represents PDF array end token ']'"
      },
      {
        "id": "name",
        "description": "Represents a PDF name object"
      },
      {
        "id": "string_literal",
        "description": "Represents a PDF string literal"
      },
      {
        "id": "hex_string",
        "description": "Represents a PDF hexadecimal string '<...>'"
      },
      {
        "id": "indirect_ref",
        "description": "Represents a PDF indirect reference 'X Y R'"
      },
      {
        "id": "integer",
        "description": "Represents a PDF integer object"
      },
      {
        "id": "real",
        "description": "Represents a PDF real number object"
      },
      {
        "id": "bool",
        "description": "Represents a PDF boolean: 'true' or 'false'"
      },
      {
        "id": "null",
        "description": "Represents the PDF 'null' keyword"
      },
      {
        "id": "xref",
        "description": "Represents the PDF 'xref' keyword"
      },
      {
        "id": "xref_10entry",
        "description": "Represents a PDF conventional cross reference 10-digit entry"
      },
      {
        "id": "xref_5entry",
        "description": "Represents a PDF conventional cross reference 5-digit entry"
      },
      {
        "id": "xref_entry",
        "description": "Represents a 20-byte PDF conventional cross reference entry"
      },
      {
        "id": "trailer",
        "description": "Represents the PDF 'trailer' keyword"
      },
      {
        "id": "eof",
        "description": "Represents the PDF end-of-file marker '%%EOF'"
      },
      {
        "id": "startxref",
        "description": "Represents the PDF 'startxref' keyword"
      },
      {
        "id": "comment",
        "description": "Represents a PDF comment '%...'"
      }
    ],
    "semanticTokenModifiers": [
      {
        "id": "isDictKey",
        "description": "Token is a dictionary key (name object)"
      },
      {
        "id": "isArrayElement",
        "description": "Token is an element of an array object"
      },
      {
        "id": "isStream",
        "description": "Token is the start of an object that has a stream"
      }
    ],
    "semanticTokenStyleDefaults": [
      {
        "id": "header",
        "foreground": "#FF0000",
        "fontStyle": "bold"
      },
      {
        "id": "endobj",
        "foreground": "#FF0000",
        "fontStyle": "bold"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "PDFCOSSyntax",
      "properties": {
        "pdf-cos-syntax.maxNumberOfProblems": {
          "scope": "resource",
          "type": "number",
          "default": 100,
          "description": "Maximum number of diagnostic problems reported."
        },
        "pdf-cos-syntax.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "NOT USED!! Traces the communication between VS Code and the language server."
        },
        "pdf-cos-syntax.ignorePreambleAndPostamble": {
          "type": "boolean",
          "default": false,
          "description": "Ignore all preamble and postamble bytes in diagnostics."
        },
        "pdf-cos-syntax.ignoreXRefLineLength": {
          "type": "boolean",
          "default": false,
          "description": "Ignore all length length of cross reference table entries in diagnostics."
        },
        "pdf-cos-syntax.verboseLogging": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose logging for debugging purposes."
        }
      }
    },
    "languages": [
      {
        "id": "pdf",
        "configuration": "./language-configuration.json",
        "extensions": [
          ".pdf",
          ".PDF"
        ],
        "aliases": [
          "PDF",
          "pdf"
        ],
        "mimetypes": [
          "application/pdf"
        ],
        "icon": {
          "light": "./assets/pdf-light.png",
          "dark": "./assets/pdf-dark.png"
        }
      },
      {
        "id": "fdf",
        "configuration": "./language-configuration.json",
        "extensions": [
          ".fdf",
          ".FDF"
        ],
        "aliases": [
          "FDF",
          "fdf"
        ],
        "mimetypes": [
          "application/fdf",
          "application/vnd.fdf"
        ],
        "icon": {
          "light": "./assets/fdf-light.png",
          "dark": "./assets/fdf-dark.png"
        }
      }
    ],
    "snippets": [
      {
        "language": "pdf",
        "path": "./snippets/pdf-snippets.json"
      },
      {
        "language": "fdf",
        "path": "./snippets/fdf-snippets.json"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "submenu": "pdf.submenu",
          "group": "pdf",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        }
      ],
      "pdf.submenu": [
        {
          "command": "pdf-cos-syntax.exportXrefAsCSV",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.imageAHex",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.imageA85",
          "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.imageAHexDCT",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.imageA85DCT",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.dataAHex",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.dataA85",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.convertLiteral2Hex",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.convertHex2Literal",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.convert2ObjectStream",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.convert2XrefStream",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.2AsciiHex",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.2Ascii85",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.FromAsciiHex",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        },
        {
          "command": "pdf-cos-syntax.FromAscii85",
          "when": "(editorLangId == pdf) || (editorLangId == fdf)"
        }
      ]
    },
    "submenus": [
      {
        "id": "pdf.submenu",
        "label": "PDF",
        "when": "(editorLangId == pdf) || (editorLangId == fdf)"
      }
    ],
    "commands": [
      {
        "command": "pdf-cos-syntax.exportXrefAsCSV",
        "title": "Export all cross reference table data for all revisions as a CSV file",
        "shortTitle": "Export cross reference table as CSV",
        "category": "PDF",
        "icon": "$(export)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.imageAHex",
        "title": "Insert an Image XObject using /ASCIIHexDecode filter on raw pixels",
        "shortTitle": "Insert an Image XObject (ASCII-Hex only)",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.imageA85",
        "title": "Insert an Image XObject using /ASCII85Decode filter on raw pixels",
        "shortTitle": "Insert an Image XObject (ASCII-85 only)",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.imageAHexDCT",
        "title": "Insert an Image XObject using /ASCIIHexDecode and /DCTDecode (JPEG) filters",
        "shortTitle": "Insert an Image XObject (ASCII-Hex of a JPEG)",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.imageA85DCT",
        "title": "Insert an Image XObject using /ASCII85Decode and /DCTDecode (JPEG) filters",
        "shortTitle": "Insert an Image XObject (ASCII-85 of a JPEG)",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.dataAHex",
        "title": "Insert binary data as a stream object using /ASCIIHexDecode filter",
        "shortTitle": "Insert a stream object (ASCII-Hex)",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.dataA85",
        "title": "Insert binary data a stream object using /ASCII85Decode filter",
        "shortTitle": "Insert a stream object (ASCII-85)",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.convertLiteral2Hex",
        "title": "Convert PDF literal string to a hex string",
        "shortTitle": "Convert PDF literal string to a hex string",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.convertHex2Literal",
        "title": "Convert PDF hex string to a literal string",
        "shortTitle": "Convert PDF hex string to a literal string",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.convert2ObjectStream",
        "title": "Convert 1 or more indirect PDF objects to a single object stream (uncompressed)",
        "shortTitle": "Convert PDF objects to an object stream",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.convert2XrefStream",
        "title": "Convert a cross reference table to cross reference stream (ASCII-Hex)",
        "shortTitle": "Convert a cross reference table to cross reference stream (ASCII-Hex)",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.2AsciiHex",
        "title": "Compress data using ASCII-Hex",
        "shortTitle": "Compress data using ASCII-Hex",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.2Ascii85",
        "title": "Compress data using ASCII-85",
        "shortTitle": "Compress data using ASCII-85",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.FromAsciiHex",
        "title": "Uncompress data from ASCII-Hex to raw bytes",
        "shortTitle": "Uncompress data from ASCII-Hex to raw bytes",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      },
      {
        "command": "pdf-cos-syntax.FromAscii85",
        "title": "Uncompress data from ASCII-85 to raw bytes",
        "shortTitle": "Uncompress data from ASCII-85 to raw bytes",
        "category": "PDF",
        "icon": "$(zap)",
        "enablement": "(editorLangId == pdf) || (editorLangId == fdf)"
      }
    ],
    "configurationDefaults": {
      "[pdf]": {
        "editor.semanticHighlighting.enabled": true,
        "editor.suggestOnTriggerCharacters": true,
        "editor.renderWhitespace": "all",
        "files.trimTrailingWhitespace": false,
        "editor.renderControlCharacters": true,
        "editor.suggest.selectionMode": "whenTriggerCharacter",
        "files.eol": "\n",
        "editor.quickSuggestions": {
          "other": true,
          "comments": false,
          "strings": false
        }
      },
      "[fdf]": {
        "editor.semanticHighlighting.enabled": true,
        "editor.suggestOnTriggerCharacters": true,
        "editor.renderWhitespace": "all",
        "files.trimTrailingWhitespace": false,
        "editor.renderControlCharacters": true,
        "editor.suggest.selectionMode": "whenTriggerCharacter",
        "files.eol": "\n",
        "editor.quickSuggestions": {
          "other": true,
          "comments": false,
          "strings": false
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile ",
    "compile": "tsc -b && npx copyfiles -V \"./server/src/grammar/*.ohm\" ./out",
    "watch": "tsc -b -w",
    "lint": "eslint --config ./eslint.config.mjs ./client/src ./server/src",
    "generate": "npx ohm generateBundles --withTypes ./server/src/grammar/grammar_pdfTokens.ohm"
  },
  "devDependencies": {
    "@eslint/js": "^9.7.0",
    "@ohm-js/cli": "^2.0.0",
    "@types/eslint__js": "^8.42.3",
    "@types/mocha": "^10.0.7",
    "@types/node": "^20.14.12",
    "@types/vscode": "^1.91.0",
    "@vscode/test-electron": "^2.4.1",
    "copyfiles": "^2.4.1",
    "eslint": "^9.7.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-jsdoc": "^48.8.3",
    "eslint-plugin-tsdoc": "^0.3.0",
    "install": "^0.13.0",
    "typescript": "^5.5.4",
    "typescript-eslint": "^8.0.0-alpha.54"
  },
  "dependencies": {
    "ascii85": "^1.0.2",
    "fs": "^0.0.1-security",
    "ohm-js": "^17.1.0",
    "sharp": "^0.33.4",
    "vscode-languageclient": "^9.0.1",
    "vscode-languageserver": "^9.0.1",
    "vscode-languageserver-textdocument": "^1.0.11"
  }
}
